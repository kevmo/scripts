#!/bin/bash
# validint-- Validates integer input, allowing negative
# integers, too.

validint()
{
  # Validate first field and test that value against min value $2 and/or
  #   max value $3 if they are supplied. If the value isn't within range
  #   or is not composed of just digits... fail

  number="$1"; min="$2"; max="$3"

  if [ -z $number ] ; then
    echo "You didn't enter anything. Please enter a number." >&2
    return 1
  fi

  # is the first character a "-" sign?
  if [ "${number%${number#?}}" = "-" ] ; then
    testvalue="${number#?}" # grab all but the first char to test.
  else
    testvalue="$number"
  fi

  # Create a version of the number that has no digits for testing.
  nodigits="$(echo $testvalue | sed 's/[[:digit:]]//g')"

  # check for nondigit characters
  if [ ! -z $nodigits ] ; then
    echo "Invalid number format! Only digits, no commas, spaces, etc" >&2
    return 1
  fi

  if [ ! -z $min ] ; then
    # is input greater than min value?
    if [ "$number" -lt "$min" ] ; then
      echo "Invalid number, value is too small, smalled value is $min" >&2
      return 1
    fi
  fi

  if [ ! -z $max ] ; then
    # is the input greater than the maximum value?
    if [ "$number" -gt "$max"] ; then
      echo "Invalid number, too large, largest allowed is $max" >&2
      return 1
    fi
  fi

  echo "valid"
  return 0
}

#Input validation

# if validint "$1" "$2" "$3" ; then
#   echo "Input is valid integer w/in constraints"
# fi
